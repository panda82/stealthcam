name: Android CI

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # Instalează Android cmdline-tools (fără 'packages' ca să evităm concatenarea)
      - name: Set up Android SDK (cmdline-tools only)
        uses: android-actions/setup-android@v3
        with:
          accept-android-sdk-licenses: true
          cmdline-tools-version: 11076708

      # Instalează pachetele, cu fallback dacă 34 nu e disponibil pe runner
      - name: Install SDK packages (with fallback)
        shell: bash
        run: |
          set -euxo pipefail

          sdkmanager --list || true

          # platform-tools
          sdkmanager "platform-tools" || true

          # Platform 34 sau cel mai nou disponibil
          if ! sdkmanager "platforms;android-34"; then
            LATEST_PLATFORM="$(sdkmanager --list | sed -n 's/^[[:space:]]*\(platforms;android-[0-9]\+\).*/\1/p' | sort -V | tail -1)"
            sdkmanager "${LATEST_PLATFORM}"
            USING_API="${LATEST_PLATFORM##*android-}"
          else
            USING_API="34"
          fi
          echo "USING_API=${USING_API}" >> "$GITHUB_ENV"

          # Build-tools 34.0.0 sau cele mai noi disponibile
          if ! sdkmanager "build-tools;34.0.0"; then
            LATEST_BT="$(sdkmanager --list | sed -n 's/^[[:space:]]*\(build-tools;[0-9][0-9.]*\).*/\1/p' | sort -V | tail -1)"
            sdkmanager "${LATEST_BT}"
          fi

      # Dacă API-ul nu e 34, aliniază compile/target în gradle ca să potrivească
      - name: Align compile/target SDK if fallback used
        if: env.USING_API != '34'
        shell: bash
        run: |
          echo "Adjusting compile/target SDK to ${USING_API}"
          sed -i "s/compileSdkVersion [0-9][0-9]*/compileSdkVersion ${USING_API}/" app/build.gradle
          sed -i "s/targetSdkVersion [0-9][0-9]*/targetSdkVersion ${USING_API}/" app/build.gradle

      # Instalează Gradle 8.4 (compatibil cu AGP 8.2.2 din proiectul tău)
      - name: Install Gradle 8.4 via SDKMAN
        shell: bash
        run: |
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install gradle 8.4
          gradle --version

      # Build APK debug
      - name: Build Debug APK
        run: gradle assembleDebug

      # Upload artifact (APK)
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: StealthCam-debug
          path: app/build/outputs/apk/debug/*.apk
