name: Android CI
on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          accept-android-sdk-licenses: true
          cmdline-tools-version: 11076708

      - name: Install SDK packages (with fallback)
        shell: bash
        run: |
          set -euxo pipefail
          sdkmanager "platform-tools" || true
          sdkmanager "platforms;android-34" || sdkmanager "platforms;android-35" || true
          sdkmanager "build-tools;34.0.0" || sdkmanager "build-tools;35.0.0" || true

      - name: Detect Gradle project root
        id: detect
        shell: bash
        run: |
          set -e
          ROOT="$(git ls-files | grep -E '(^|/)(settings\.gradle(\.kts)?|build\.gradle(\.kts)?)$' | xargs -r -n1 dirname | sort -u | head -n1)"
          [ -n "$ROOT" ] || { echo "No Gradle settings/build file found"; exit 1; }
          echo "root=$ROOT" >> "$GITHUB_OUTPUT"
          echo "Gradle root: $ROOT"

      - name: Install Gradle 8.4 (official zip)
        shell: bash
        run: |
          set -euxo pipefail
          GRADLE_VER=8.4
          curl -L "https://services.gradle.org/distributions/gradle-${GRADLE_VER}-bin.zip" -o gradle.zip
          unzip -q gradle.zip -d "$HOME/gradle"
          echo "$HOME/gradle/gradle-${GRADLE_VER}/bin" >> "$GITHUB_PATH"
          gradle --version

      - name: Detect Android application module
        id: module
        shell: bash
        run: |
          set -e
          ROOT="${{ steps.detect.outputs.root }}"
          HIT="$(grep -RIl --include=build.gradle --include=build.gradle.kts "com.android.application" "$ROOT" || true)"
          [ -n "$HIT" ] || { echo "No module with 'com.android.application' found under $ROOT"; exit 1; }
          MOD_DIR="$(dirname "$HIT")"
          MOD_REL="${MOD_DIR#$ROOT/}"
          MOD_NAME="${MOD_REL//\//:}"
          echo "moduleDir=$MOD_REL" >> "$GITHUB_OUTPUT"
          echo "modulePath=:$MOD_NAME" >> "$GITHUB_OUTPUT"

      - name: Show Gradle projects & tasks (debug)
        shell: bash
        run: |
          set -euxo pipefail
          cd "${{ steps.detect.outputs.root }}"
          gradle -q projects || true
          gradle tasks --all | head -n 120 || true

      - name: Build Debug APK
        shell: bash
        run: |
          set -euxo pipefail
          cd "${{ steps.detect.outputs.root }}"
          gradle "${{ steps.module.outputs.modulePath }}:assembleDebug" --stacktrace --warning-mode all --info

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: StealthCam-debug
          path: ${{ steps.detect.outputs.root }}/${{ steps.module.outputs.moduleDir }}/build/outputs/apk/debug/*.apk
