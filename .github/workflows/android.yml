name: Android CI

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          accept-android-sdk-licenses: true

      - name: Install SDK packages (prefer 34)
        shell: bash
        run: |
          set -euxo pipefail
          sdkmanager "platform-tools" || true
          sdkmanager "platforms;android-34" || true
          sdkmanager "build-tools;34.0.0" || true

      - name: Install Gradle 8.4 (official zip)
        shell: bash
        run: |
          set -euxo pipefail
          GRADLE_VER=8.4
          curl -L "https://services.gradle.org/distributions/gradle-${GRADLE_VER}-bin.zip" -o gradle.zip
          unzip -q gradle.zip -d "$HOME/gradle"
          echo "$HOME/gradle/gradle-${GRADLE_VER}/bin" >> "$GITHUB_PATH"
          gradle --version

      - name: Project diagnostics (module & tasks)
        shell: bash
        run: |
          set -euxo pipefail
          echo "---- projects ----"
          gradle -q projects || true
          echo "---- :app tasks (first 120 lines) ----"
          gradle :app:tasks --all | head -n 120 || true
          echo "---- grep com.android.application ----"
          grep -RIn --include=build.gradle --include=build.gradle.kts "com.android.application" . || true

      - name: Build (capture full logs, do not fail job)
        shell: bash
        run: |
          set -euxo pipefail
          # rulează întâi verificarea care pica, apoi buildul; nu oprim jobul ca să încărcăm logurile
          ( gradle :app:checkDebugAarMetadata --stacktrace --console=plain --info || true ) | tee build.log
          ( gradle :app:assembleDebug         --stacktrace --console=plain --info || true ) | tee -a build.log
          echo "---- tail build.log ----"
          tail -n 120 build.log || true

      - name: List outputs (debug)
        if: always()
        shell: bash
        run: |
          set -euxo pipefail
          echo "=== REPO ROOT ==="; ls -la
          echo "=== SEARCH APK/AAB ==="
          find . -maxdepth 8 -type f \( -name '*.apk' -o -name '*.aab' \) -print | sed 's/^/FOUND: /' || true
          echo "=== LIST app/ ==="
          find app -maxdepth 6 -type f -print 2>/dev/null | sed 's/^/APPFILE: /' || echo "No app/ directory or files."

      - name: Upload build log (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gradle-build-log
          path: build.log

      - name: Upload app folder (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-folder
          path: app/**
          if-no-files-found: warn

      - name: Upload any APK/AAB (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            **/outputs/apk/**/*.apk
            **/outputs/bundle/**/*.aab
          if-no-files-found: warn
